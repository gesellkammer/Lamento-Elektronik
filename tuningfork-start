#!/bin/bash

CSD=tuningfork.csd
INSTANCE=Lamento
CSOUND_PORT=9990
OPENSTAGECONTROL_PORT=9991
HOST="127.0.0.1"

case "$(uname -s)" in

    Darwin*)
        csoundopts="--env:CSNOSTOP=yes --omacro:USEOSC=1"
        openstagecontrol="/Applications/open-stage-control.app/Contents/MacOS/open-stage-control"
        ;;

    Linux*)
        echo "Running on Linux..."
        jack_control status
        if [[ $? != 0 ]]; then
            echo "!!!!!!!!!!!!  Jack not running, stopping  !!!!!!!!!!!"
            exit -1
        fi
        csoundopts="-+rtaudio=jack -+rtmidi=portmidi -Ma --env:CSNOSTOP=yes --omacro:USEOSC=1"
        openstagecontrol=open-stage-control
        ;;
        
esac

log() {
    echo
    echo "::::::::: $1"
    echo
}

msg () {
    echo
    echo "******************* $1 *******************"
    echo
}

echo
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "          Lamento           "
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo

log "Launching Open Stage Control"

launchosc() {
    echo
    for x in $(seq 10); do
        echo -n "$x "
        sleep 0.2
    done
            
    "$openstagecontrol"                   \
        --osc-port $OPENSTAGECONTROL_PORT \
        --send $HOST:$CSOUND_PORT \
        --load tuningfork-ui.json \
        --theme flat \
        --instance-name "$INSTANCE" \
        --state tuningfork-ui.state \
        --remote-root "$(realpath .)"
                
}


log "Waiting until Open Stage Control starts"

launchosc &


echo "csound $csoundopts $CSD"


while true; do
    rm --force exitcode.txt
    csound $csoundopts "$CSD"

    if [ ! -e exitcode.txt ]; then
        # file does not exist, so csound exited by something like ctrl-c
        log "Csound interrupted"
        break
    fi 
        
    exitcode="$(cat exitcode.txt)"
    log "Csound exited, exitcode.txt = $exitcode"
    if [[ "$exitcode" != "0" ]]; then
        msg "Restarting"
        sleep 1
        continue
    fi
    break
done 


log "Csound exited with code $?"
log "Shutting down Open Stage Control"
pkill -f "open-stage-control(.)*$INSTANCE"
# kill $(jobs -p)
sleep 1
log "Exiting"